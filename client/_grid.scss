/* ==========================================================================
   Grid
   ========================================================================== */

/* Variables
   ========================================================================== */

$grid-defaults: (
   desk: 3,
   lap: 2,
   palm: 1
);

// $grid-item-defaults: (
//    desk: 1,
//    lap: 1,
//    palm: 1
// );


/* Classes
   ========================================================================== */

%grid {
   @include not-flow;

   margin-left: taper(-1);

   .flexbox & {
      display: flex;
      flex-wrap: wrap;
   }

   .no-flexbox & {
      letter-spacing: -0.31em;

      &__item {
         display: inline-block;
         letter-spacing: normal;
         vertical-align: top;
      }
   }

   &__item {
      margin: 0 0 lines(1) taper(1) !important;

      @include media-query(palm) {
         //margin-bottom: lines(.5);
      }

      @each $media-query in map-keys($grid-defaults) {
         $columns: map-get($grid-defaults, $media-query);

         @include media-query($media-query) {
            width: 100% / $columns - taper(1);
            // @for $i from 1 through $columns {
            //    &%grid__item--span-#{$i}--#{$media-query} {
            //       width: ((100% / $columns) * $i) - $gutter;
            //    }
            // }
         }

      }
   }
}

@mixin grid($items-per-row: $grid-defaults, $hgap: taper(1), $vgap: lines(1)) {
   @extend %grid;

   $media-queries: map-keys($grid-defaults);
   $items-per-row: map-merge($grid-defaults, $items-per-row);

   $ie8-friendly: true !default;
   @if ($hgap != 0) and (unit($hgap) != "%") {
      $ie8-friendly: false;
   }

   @if $hgap != taper(1) {
      @if $ie8-friendly {
         margin-left: -$hgap !important;
         > * {
            margin-left: $hgap !important;
         }
      } @else {
         margin-left: calc(#{-$hgap}) !important;
         > * {
            margin-left: calc(#{$hgap}) !important;
         }
      }
   }

   > * {
      @extend %grid__item;

      @if $vgap != lines(1) {
         margin-bottom: $vgap !important;

         @include media-query(palm) {
            //margin-bottom: $vgap / 2 !important;
         }
      }

      @each $media-query in $media-queries {
         $columns: map-get($items-per-row, $media-query);

         @if ($items-per-row != $grid-defaults) or ($hgap != taper(1)) {
            @include media-query($media-query) {
               // @for $i from 1 through $columns {
               //    &%grid__item--span-#{$i}--#{$media-query} {
               //       @if $ie8-friendly {
               //          width: ((100% / $columns) * $i) - $hgap;
               //       } @else {
               //          width: ((100% / $columns) * $i) - $gutter;
               //          width: calc(#{((100% / $columns) * $i)} - #{$hgap});
               //       }
               //    }
               // }
               @if $ie8-friendly {
                  width: 100% / $columns - $hgap;
               } @else {
                  width: 100% / $columns - taper(1);
                  width: calc(#{100% / $columns} - #{$hgap});
               }
            }
         }

      }

   }

}

// @mixin grid-item-span($item-span) {
//    $item-span: map-merge($grid-item-defaults, $item-span);
//    @each $media-query in map-keys($item-span) {
//       @extend %grid__item--span-#{map-get($item-span, $media-query)--#{$media-query}};
//    }
// }