/* ==========================================================================
   Grid
   ========================================================================== */

/* Defaults
   ========================================================================== */

$grid-defaults: (
   desk: 3,
   lap: 2,
   palm: 1
);

$grid-item-defaults: (
   desk: 1,
   lap: 1,
   palm: 1
);


/* Mixins
   ========================================================================== */

@mixin last-row($items-per-row) {
   &:nth-child(#{$items-per-row}n + 1):nth-last-child(-n + #{$items-per-row}),
   &:nth-child(#{$items-per-row}n + 1):nth-last-child(-n + #{$items-per-row}) ~ & {
      @content;
   }
}

@mixin media-query-with-fallback($type) {
   @if $type == desk {
      @content;
   } @else {
      @include media-query($type) {
         @content;
      }
   }
}


/* Classes
   ========================================================================== */

%grid {
   display: flex;
   flex-wrap: wrap;
   margin-left: -$gutter;
   letter-spacing: -0.31em;

   &__item {
      margin-left: $gutter;
      display: inline-block;
      letter-spacing: normal;
      vertical-align: top;
      @each $media-query in map-keys($grid-defaults) {

         $columns: map-get($grid-defaults, $media-query);

         @include media-query-with-fallback($media-query) {
            width: 100% / $columns - $gutter;
            @for $i from 1 through $columns {
               &%grid__item--span-#{$i}--#{$media-query} {
                  width: ((100% / $columns) * $i) - $gutter;
               }
            }
         }

      }
   }
}

@mixin grid($items-per-row: $grid-defaults, $gap: $gutter) {
   @extend %grid;

   $media-queries: map-keys($grid-defaults);

   $ie8-friendly: true !default;
   @if ($gap != 0) and (unit($gap) != "%") {
      $ie8-friendly: false;
   }

   @if $items-per-row == default {
      $items-per-row: $grid-defaults;
   } @else {
      $items-per-row: map-merge($grid-defaults, $items-per-row);
   }

   $items--desk: map-get($items-per-row, desk);

   @if $gap != $gutter {
      @if $ie8-friendly {
         margin-left: -$gap;
         &__item {
            margin-left: $gap;
         }
      } @else {
         margin-left: calc(#{-$gap});
         &__item {
            margin-left: calc(#{$gap});
         }
      }
   }

   &__item {
      @extend %grid__item;

      @each $media-query in $media-queries {

         $columns: map-get($items-per-row, $media-query);

         @if ($columns != map-get($grid-defaults, $media-query)) or ($gap != $gutter) {
            @include media-query-with-fallback($media-query) {
               @for $i from 1 through $columns {
                  &%grid__item--span-#{$i}--#{$media-query} {
                     @if $ie8-friendly {
                        width: ((100% / $columns) * $i) - $gap;
                     } @else {
                        width: ((100% / $columns) * $i) - $gutter;
                        width: calc(#{((100% / $columns) * $i)} - #{$gap});
                     }
                  }
               }
               @if $ie8-friendly {
                  width: 100% / $columns - $gap;
               } @else {
                  width: 100% / $columns - $gutter;
                  width: calc(#{100% / $columns} - #{$gap});
               }
            }
         }

      }

   }

}

@mixin grid-item-span($item-span) {
   $item-span: map-merge($grid-item-defaults, $item-span);
   @each $media-query in map-keys($item-span) {
      @extend %grid__item--span-#{map-get($item-span, $media-query)--#{$media-query}};
   }
}