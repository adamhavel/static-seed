/* ==========================================================================
   Grid
   ========================================================================== */

/* Settings
   ========================================================================== */

$grid-columns: (
    '>=layout': 3,
    'inbetween': 2,
    '<line': 1
);
$grid-hgap: const(GUTTER) * 2;
$grid-vgap: 1;


/* Mixins
   ========================================================================== */

@mixin grid($items-per-row: $grid-columns, $hgap: $grid-hgap, $vgap: $grid-vgap) {
    display: flex !important;
    flex-wrap: wrap;

    .no-flexwrap & {
        display: block;
        letter-spacing: -.31em;
    }

    $items-per-row: map-merge($grid-columns, $items-per-row);

    > * {
        margin-left: $hgap !important;
        margin-top: lines($vgap) !important;
        margin-bottom: 0 !important;

        @each $breakpoint, $columns in $items-per-row {

            $width: calc(#{(100% / $columns)} - #{$hgap * ($columns - 1) / $columns});

            @if ($hgap == 0) {
                $width: 100% / $columns;
            } @elseif (unit($hgap) == '%') {
                $width: (100% / $columns) - ($hgap * ($columns - 1) / $columns);
            }

            @include media($breakpoint) {

                width: $width;

                &:nth-child(-n + #{$columns}) {
                    margin-top: 0 !important;
                }

                &:nth-child(#{$columns}n + 1) {
                    margin-left: 0 !important;
                }

            }

        }

        .no-flexwrap & {
            display: inline-block !important;
            letter-spacing: normal;
            vertical-align: top;
        }
    }
}


/* Definitions
   ========================================================================== */

.o-grid {
    @include grid;
}

