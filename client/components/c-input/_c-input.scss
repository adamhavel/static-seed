/* ==========================================================================
   Input
   ========================================================================== */

/* Setting
   ========================================================================== */

$INPUT_SIZE: lines(1.5);
$INPUT_COLORS: (
   'background': white,
   'focus': rgba(color(highlight), .25),
   'invalid': rgba(red, .1)
);


/* Template
   ========================================================================== */

%t-input {
   border: 1px solid rgba(black, 6);
   background: map-get($INPUT_COLORS, 'background');
   box-shadow: inset 2px 2px 0 0 rgba(black, .2);
   font-size: micro-scale(3) * 1em;
   transition: background-color .2s;
}


/* Definition
   ========================================================================== */

.c-input {
   @extend %t-input;

   width: 100%;
   padding: 0 .5em;
   height: $INPUT_SIZE;

   &:focus {
      background-color: map-get($INPUT_COLORS, 'focus');
   }

   &[pristine="false"]:invalid {
      background-color: map-get($INPUT_COLORS, 'invalid');
   }

   &[rows] {
      height: auto;
      padding: lines(.25) .5em;
      line-height: lines(1);
   }

   &[type="checkbox"],
   &[type="radio"] {
      width: $INPUT_SIZE;
      padding: 0;

      & ~ .c-input-placeholder:before {
         @extend %t-input;
      }

      @include gt-ie8 {
         @include hide;

         & ~ .c-input-placeholder {
            position: relative;
            padding: (($INPUT_SIZE - lines(1)) / 2) 0 0 ($INPUT_SIZE + 1rem);

            &:before {
               @include size($INPUT_SIZE);

               content: '';
               position: absolute;
               top: 0;
               left: 0;
            }
         }

            &:focus ~ .c-input-placeholder:before {
               background-color: map-get($INPUT_COLORS, 'focus');
            }

            &[pristine="false"]:invalid ~ .c-input-placeholder:before {
               background-color: map-get($INPUT_COLORS, 'invalid');
            }

         & ~ .c-input-placeholder:after {
            @include size($INPUT_SIZE / 3);

            content: '';
            position: absolute;
            top: $INPUT_SIZE / 3;
            left: $INPUT_SIZE / 3;
            background: rgba(black, .6);
            border: 1px solid rgba(black, .25);
            border-top: 0;
            border-left: 0;
            box-shadow: 2px 2px 0 0 rgba(black, .2);
            opacity: 0;
            transform: scale(2.5);
            transition: all .3s;
            will-change: transform, opacity;
         }

            &:checked + .c-input-placeholder:after {
               opacity: 1;
               transform: none;
            }

      }
   }
}