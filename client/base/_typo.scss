/* ==========================================================================
   Typography
   ========================================================================== */

/* Variables
   ========================================================================== */

$FONTS: (
   body: ('Azo Sans', sans-serif),
   display: ('Playfair Display', serif)
);

/* Helpers
   ========================================================================== */

// Retrieve a font stack, either of the body or display variety.
@function font($name) {
   @return map-get($FONTS, $name);
}

// Returns a multiple of the leading. Used to create any sort of vertical spacing.
@function lines($count: 1, $correction: null) {
   @if $count == 0 {
      @return 0;
   } @else if $correction == null  {
      @return $count * $LINE_HEIGHT * 1rem;
   } @else {
      @return calc(#{$count * $LINE_HEIGHT * 1rem} + #{$correction});
   }
}

// Create a pretty underline.
@mixin underline($weight: 1px, $background: color(background), $color: color(highlight), $hover: color(text), $position: 90%) {
   display: inline-block;
   text-decoration: none;
   background: linear-gradient($color, $color) no-repeat;
   background-size: 100% $weight;
   background-position: 0 $position;
   text-shadow: $weight 0 $background,
                -$weight 0 $background,
                ($weight / 2) 0 $background,
                -($weight / 2) 0 $background;

   &:focus,
   &:hover {
      background-image: linear-gradient($hover, $hover);
   }
}


/* Flow control
   ========================================================================== */

// Default content vertical spacing.
body * + * {
   margin-top: lines(1);

   @include media('condensed') {
      margin-top: lines(.5);
   }
}

// Alter the default vertical spacing.
@mixin v-spacing($lines, $fixed: false) {
   > * + * {
      margin-top: lines($lines);

      @if not $fixed {
         @include media('condensed') {
            margin-top: lines($lines / 2);
         }
      }
   }
}

// Spread items horizontally.
@mixin h-spacing($distance, $fixed: false) {
   > * {
      margin-right: $distance;

      @if not $fixed {
         @include media('<column') {
            margin-right: $distance / 2;
         }
      }
   }
}

// Removes the horizontal spacing.
@mixin no-spacing {
   > * {
      margin-top: 0;
   }
}

@mixin out-of-flow {
   margin-top: 0;

   &:first-child + * {
      margin-top: 0 !important;
   }
}

// Somebody is an island.
@mixin island($leading: 1, $trailing: $leading, $fixed: false) {

   @if $leading > 0 {
      &:not(:first-child) {
         margin-top: lines($leading);
      }
   }

   @if $trailing > 0 {
      &:not(:last-child) {
         margin-bottom: lines($trailing);
      }
   }

   @if not $fixed {
      @include media('condensed') {

         @if $leading > 0 {
            &:not(:first-child) {
               margin-top: lines($leading / 2);
            }
         }

         @if $trailing > 0 {
            &:not(:last-child) {
               margin-bottom: lines($trailing / 2);
            }
         }

      }
   }
}

@mixin aloof($distance, $fixed: false) {
   @include island($distance, 0, $fixed);
}


/* Base
   ========================================================================== */

html {
   font-size: $BASE * 1em;
   line-height: $LINE_HEIGHT;
   font-family: font(body);
   color: color(text);
   font-feature-settings: 'liga', 'kern';

   @include media('<column') {
      font-size: $BASE * 1em * micro-scale(-1);
   }
}

body {
   background: color(background);
}

a {
   li &,
   p & {
      text-decoration: underline;
      color: color(highlight);

      &:focus,
      &:hover {
         color: color(text);
      }
   }
}

small {
   font-size: micro-scale(-4) * 1em;
}


/* Editable content
   ========================================================================== */

// .content {
//    > h2, > h3, > h4 {
//       @extend %heading;
//    }

//    > h2 {
//       @extend %gamma;
//    }

//    > h3 {
//       @extend %delta;
//    }

//    > h4 {
//       @extend %epsilon;
//    }

//    > img {
//       @include island(2);
//       @include center;
//    }

//    > ul:not([class]) {
//       @extend %bullet-list;
//    }

//    > ol {
//       @extend %numbered-list;
//    }
// }