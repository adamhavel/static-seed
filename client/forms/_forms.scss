/* ==========================================================================
   Forms
   ========================================================================== */

/* Settings
   ========================================================================== */

$forms-floating-labels: true;
$forms-input-size: lines(1.5);
$forms-color-background: white;
$forms-color-focus: faux-rgba(cyan, $forms-color-background, .1);
$forms-color-invalid: faux-rgba(red, $forms-color-background, .1);
$forms-color-valid: faux-rgba(green, $forms-color-background, .1);


/* Helpers
   ========================================================================== */

@function inputs($group: textual) {
   $types: ();
   @if $group == textual {
      $types: (text, number, tel, email);
   } @else if $group == boolean {
      $types: (radio, checkbox);
   } @else if $group == buttons {
      $types: (submit, reset, button);
   }

   $selector: ();
   @each $type in $types {
      $selector: $selector, unquote('input[type="#{$type}"]');
   }

   @return $selector;
}

@keyframes invalid-input {
   0%, 100% {
      transform: translateX(0);
   }
   10%, 30%, 50%, 70%, 90% {
      transform: translateX(-5px);
   }
   20%, 40%, 60%, 80% {
      transform: translateX(5px);
   }
}

.j-invalid-input {
   animation: invalid-input .5s;
}


/* Templates
   ========================================================================== */

%t-input {
   border: 1px solid faux-rgba(black, $forms-color-background, .6);
   background-color: white;
   box-shadow: inset 2px 2px 0 0 rgba(black, .2);
   font-size: micro-scale(3) * 1em;
   transition: background-color .2s;

   &[empty="false"]:valid:not(:focus):not(select) {
      background-color: $forms-color-valid;
   }

   &:focus {
      background-color: $forms-color-focus;
   }

   &[empty="false"]:invalid {
      background-color: $forms-color-invalid;
   }
}

%t-label {
   position: absolute;
   top: lines(-1);
   left: 0;
   height: lines(1);
   padding-left: .5em;

   @if not $forms-floating-labels {
      top: 0;
   }
}


/* Basic elements
   ========================================================================== */

form {
   @include island(3);
}

   form div {
      @include grid((
         desk: 2
      ), 5%, lines(1.5));
   }

   form button {
      margin-left: auto;
      min-width: scale-to-percentage(0, 0 2);
   }


input,
select,
textarea {
   @extend %t-input;

   width: 100%;
   height: $forms-input-size;
   padding: 0 .5em;

   @include lteIE8 {
      line-height: $forms-input-size - .2rem;
   }
}

input[type="radio"],
input[type="checkbox"] {
   width: $forms-input-size;
   cursor: pointer;

   @include gtIE8 {
      @include hide;
   }
}

select {
   @include not-flow;

   padding: 0 0 0 .25em;
   cursor: pointer;

   option {
      padding: 0 .4em;
   }

   @include lteIE8 {
      padding-bottom: .25em;
   }
}

textarea {
   height: auto;
}

label {
   @include not-flow;

   display: block;
   position: relative;

   // label
   span {
      display: block;
      cursor: pointer;
      user-select: none;
   }

   // tooltip
   small {
      font-style: italic;
      pointer-events: none;

      &:before {
         content: 'â€¦';
      }
   }

   @if $forms-floating-labels {
      transform: translateZ(0);
   } @else {
      padding-top: lines(1);
   }

   #{inputs(textual)} {

      // label
      & + span {
         @extend %t-label;
      }

      // tooltip
      & ~ small {
         position: absolute;
         top: 100%;
         right: 0;
         opacity: 0;
         transform: translateX(-3em);
         transition: all .3s;
         will-change: transform, opacity;
      }

         &:focus ~ small {
            opacity: 1;
            transform: none;
         }

      @if $forms-floating-labels {

         .js.csstransforms & {

            & + span {
               top: 0;
               height: $forms-input-size;
               line-height: $forms-input-size;
               font-size: micro-scale(3) * 1em;
               transition: transform .2s;
               transform-origin: bottom left;
               pointer-events: none;
               will-change: transform;
            }

            &:focus + span,
            &[empty="false"] + span {
               transform: translateY(-90%) scale(micro-scale(-3));
               pointer-events: auto;
            }

         }

      }
   }

   input[type="checkbox"] {

      // label
      & + span {
         position: relative;
         padding-left: $forms-input-size + lines(.5);
         padding-top: ($forms-input-size - lines(1)) / 2;
      }

      // checkbox
      &,
      & + span:before,
      & + span:after {
         position: absolute;
         top: 0;
         left: 0;
      }

      // faux checkbox
      & + span:before {
         @extend %t-input;
         @include size($forms-input-size);

         content: '';

         @include lteIE8 {
            display: none;
         }
      }

      & + span:after {
         @include size($forms-input-size / 3);

         content: '';
         position: absolute;
         top: $forms-input-size / 3;
         left: $forms-input-size / 3;
         background-color: rgba(black, .6);
         border: 1px solid rgba(black, .25);
         border-top: 0;
         border-left: 0;
         box-shadow: 2px 2px 0 0 rgba(black, .2);
         opacity: 0;
         transform: scale(2.5);
         transition: all .3s;
         will-change: transform, opacity;

         @include lteIE8 {
            display: none;
         }
      }

      // focus state
      & + span:active:before,
      &:focus + span:before {
         background-color: $forms-color-focus;
      }

      // checked state
      &:checked + span:after {
         opacity: 1;
         transform: none;
      }

   }

   select {

      // label
      & + span {
         @extend %t-label;

         width: 100%;

         // dropdown cover
         &:before {
            @include size($forms-input-size);
            @extend %t-input;

            content: '';
            position: absolute;
            top: 100%;
            right: 0;
            border-left: 0;
            box-shadow: inset 0 2px 0 0 rgba(black, .2);
            pointer-events: none;
         }

         // dropdown button
         &:after {
            @include size(.5rem);

            content: '';
            position: absolute;
            bottom: -($forms-input-size / 2 + .25rem);
            right: ($forms-input-size / 2 - .25rem);
            background-color: faux-rgba(black, $forms-color-background, .6);
            border: 1px solid faux-rgba(black, $forms-color-background, .85);
            border-top: 0;
            border-left: 0;
            pointer-events: none;
            transition: transform .3s;
            transform: rotate(45deg);
            will-change: transform;
         }
      }

      // focus state
      &:focus + span:before {
         background-color: $forms-color-focus;
      }

      &:focus + span:after {
         transform: rotate(0) scale(1.25);
      }
   }
}